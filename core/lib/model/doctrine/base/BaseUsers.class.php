<?php

/**
 * BaseUsers
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $code
 * @property string $first_name
 * @property string $last_name
 * @property string $middle_name
 * @property string $username
 * @property string $password
 * @property string $email
 * @property string $picture
 * @property int $position_id
 * @property int $role_id
 * @property boolean $is_active
 * @property int $status_id
 * @property UserRoles $UserRoles
 * @property UserPositions $UserPositions
 * @property UserStatus $UserStatus
 * 
 * @method string        getCode()          Returns the current record's "code" value
 * @method string        getFirstName()     Returns the current record's "first_name" value
 * @method string        getLastName()      Returns the current record's "last_name" value
 * @method string        getMiddleName()    Returns the current record's "middle_name" value
 * @method string        getUsername()      Returns the current record's "username" value
 * @method string        getPassword()      Returns the current record's "password" value
 * @method string        getEmail()         Returns the current record's "email" value
 * @method string        getPicture()       Returns the current record's "picture" value
 * @method int           getPositionId()    Returns the current record's "position_id" value
 * @method int           getRoleId()        Returns the current record's "role_id" value
 * @method boolean       getIsActive()      Returns the current record's "is_active" value
 * @method int           getStatusId()      Returns the current record's "status_id" value
 * @method UserRoles     getUserRoles()     Returns the current record's "UserRoles" value
 * @method UserPositions getUserPositions() Returns the current record's "UserPositions" value
 * @method UserStatus    getUserStatus()    Returns the current record's "UserStatus" value
 * @method Users         setCode()          Sets the current record's "code" value
 * @method Users         setFirstName()     Sets the current record's "first_name" value
 * @method Users         setLastName()      Sets the current record's "last_name" value
 * @method Users         setMiddleName()    Sets the current record's "middle_name" value
 * @method Users         setUsername()      Sets the current record's "username" value
 * @method Users         setPassword()      Sets the current record's "password" value
 * @method Users         setEmail()         Sets the current record's "email" value
 * @method Users         setPicture()       Sets the current record's "picture" value
 * @method Users         setPositionId()    Sets the current record's "position_id" value
 * @method Users         setRoleId()        Sets the current record's "role_id" value
 * @method Users         setIsActive()      Sets the current record's "is_active" value
 * @method Users         setStatusId()      Sets the current record's "status_id" value
 * @method Users         setUserRoles()     Sets the current record's "UserRoles" value
 * @method Users         setUserPositions() Sets the current record's "UserPositions" value
 * @method Users         setUserStatus()    Sets the current record's "UserStatus" value
 * 
 * @package    Gcross Accounting System
 * @subpackage model
 * @author     Jerick Y. Duguran & Mary Ann I. Altar
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUsers extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('users');
        $this->hasColumn('code', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'USR',
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('first_name', 'string', 60, array(
             'type' => 'string',
             'length' => 60,
             ));
        $this->hasColumn('last_name', 'string', 60, array(
             'type' => 'string',
             'length' => 60,
             ));
        $this->hasColumn('middle_name', 'string', 60, array(
             'type' => 'string',
             'length' => 60,
             ));
        $this->hasColumn('username', 'string', 60, array(
             'type' => 'string',
             'length' => 60,
             ));
        $this->hasColumn('password', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('picture', 'string', 15, array(
             'type' => 'string',
             'length' => 15,
             ));
        $this->hasColumn('position_id', 'int', 11, array(
             'type' => 'int',
             'length' => 11,
             ));
        $this->hasColumn('role_id', 'int', 11, array(
             'type' => 'int',
             'length' => 11,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('status_id', 'int', 11, array(
             'type' => 'int',
             'length' => 11,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('UserRoles', array(
             'local' => 'role_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('UserPositions', array(
             'local' => 'position_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('UserStatus', array(
             'local' => 'status_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}