<?php

/**
 * BaseGeneralLibraryAdditionInfo
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property int $general_library_id
 * @property int $industry_id
 * @property int $term_id
 * @property int $no_days
 * @property decimal $percent_discount
 * @property decimal $credit_limit_amount
 * @property boolean $restricted
 * @property string $remarks
 * @property string $vat_no
 * @property string $tin
 * @property Industry $Industry
 * @property GeneralLibrary $GeneralLibrary
 * @property GeneralLibraryTerms $GeneralLibraryTerms
 * 
 * @method int                        getGeneralLibraryId()    Returns the current record's "general_library_id" value
 * @method int                        getIndustryId()          Returns the current record's "industry_id" value
 * @method int                        getTermId()              Returns the current record's "term_id" value
 * @method int                        getNoDays()              Returns the current record's "no_days" value
 * @method decimal                    getPercentDiscount()     Returns the current record's "percent_discount" value
 * @method decimal                    getCreditLimitAmount()   Returns the current record's "credit_limit_amount" value
 * @method boolean                    getRestricted()          Returns the current record's "restricted" value
 * @method string                     getRemarks()             Returns the current record's "remarks" value
 * @method string                     getVatNo()               Returns the current record's "vat_no" value
 * @method string                     getTin()                 Returns the current record's "tin" value
 * @method Industry                   getIndustry()            Returns the current record's "Industry" value
 * @method GeneralLibrary             getGeneralLibrary()      Returns the current record's "GeneralLibrary" value
 * @method GeneralLibraryTerms        getGeneralLibraryTerms() Returns the current record's "GeneralLibraryTerms" value
 * @method GeneralLibraryAdditionInfo setGeneralLibraryId()    Sets the current record's "general_library_id" value
 * @method GeneralLibraryAdditionInfo setIndustryId()          Sets the current record's "industry_id" value
 * @method GeneralLibraryAdditionInfo setTermId()              Sets the current record's "term_id" value
 * @method GeneralLibraryAdditionInfo setNoDays()              Sets the current record's "no_days" value
 * @method GeneralLibraryAdditionInfo setPercentDiscount()     Sets the current record's "percent_discount" value
 * @method GeneralLibraryAdditionInfo setCreditLimitAmount()   Sets the current record's "credit_limit_amount" value
 * @method GeneralLibraryAdditionInfo setRestricted()          Sets the current record's "restricted" value
 * @method GeneralLibraryAdditionInfo setRemarks()             Sets the current record's "remarks" value
 * @method GeneralLibraryAdditionInfo setVatNo()               Sets the current record's "vat_no" value
 * @method GeneralLibraryAdditionInfo setTin()                 Sets the current record's "tin" value
 * @method GeneralLibraryAdditionInfo setIndustry()            Sets the current record's "Industry" value
 * @method GeneralLibraryAdditionInfo setGeneralLibrary()      Sets the current record's "GeneralLibrary" value
 * @method GeneralLibraryAdditionInfo setGeneralLibraryTerms() Sets the current record's "GeneralLibraryTerms" value
 * 
 * @package    Gcross Accounting System
 * @subpackage model
 * @author     Jerick Y. Duguran & Mary Ann I. Altar
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseGeneralLibraryAdditionInfo extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('general_library_addition_info');
        $this->hasColumn('general_library_id', 'int', 11, array(
             'type' => 'int',
             'length' => 11,
             ));
        $this->hasColumn('industry_id', 'int', 11, array(
             'type' => 'int',
             'length' => 11,
             ));
        $this->hasColumn('term_id', 'int', 11, array(
             'type' => 'int',
             'length' => 11,
             ));
        $this->hasColumn('no_days', 'int', 11, array(
             'type' => 'int',
             'notnull' => true,
             'default' => 0,
             'length' => 11,
             ));
        $this->hasColumn('percent_discount', 'decimal', 12, array(
             'type' => 'decimal',
             'scale' => 2,
             'default' => 0,
             'notnull' => true,
             'length' => 12,
             ));
        $this->hasColumn('credit_limit_amount', 'decimal', 12, array(
             'type' => 'decimal',
             'scale' => 2,
             'default' => 0,
             'notnull' => true,
             'length' => 12,
             ));
        $this->hasColumn('restricted', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));
        $this->hasColumn('remarks', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 50,
             ));
        $this->hasColumn('vat_no', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 50,
             ));
        $this->hasColumn('tin', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 50,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Industry', array(
             'local' => 'industry_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('GeneralLibrary', array(
             'local' => 'general_library_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('GeneralLibraryTerms', array(
             'local' => 'term_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}