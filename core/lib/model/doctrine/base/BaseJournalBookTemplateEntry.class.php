<?php

/**
 * BaseJournalBookTemplateEntry
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property int $journal_book_template_id
 * @property int $chart_of_account_id
 * @property int $general_library_id
 * @property decimal $debit
 * @property decimal $credit
 * @property JournalBookTemplate $JournalBookTemplate
 * @property ChartOfAccount $ChartOfAccount
 * @property GeneralLibrary $GeneralLibrary
 * 
 * @method int                      getJournalBookTemplateId()    Returns the current record's "journal_book_template_id" value
 * @method int                      getChartOfAccountId()         Returns the current record's "chart_of_account_id" value
 * @method int                      getGeneralLibraryId()         Returns the current record's "general_library_id" value
 * @method decimal                  getDebit()                    Returns the current record's "debit" value
 * @method decimal                  getCredit()                   Returns the current record's "credit" value
 * @method JournalBookTemplate      getJournalBookTemplate()      Returns the current record's "JournalBookTemplate" value
 * @method ChartOfAccount           getChartOfAccount()           Returns the current record's "ChartOfAccount" value
 * @method GeneralLibrary           getGeneralLibrary()           Returns the current record's "GeneralLibrary" value
 * @method JournalBookTemplateEntry setJournalBookTemplateId()    Sets the current record's "journal_book_template_id" value
 * @method JournalBookTemplateEntry setChartOfAccountId()         Sets the current record's "chart_of_account_id" value
 * @method JournalBookTemplateEntry setGeneralLibraryId()         Sets the current record's "general_library_id" value
 * @method JournalBookTemplateEntry setDebit()                    Sets the current record's "debit" value
 * @method JournalBookTemplateEntry setCredit()                   Sets the current record's "credit" value
 * @method JournalBookTemplateEntry setJournalBookTemplate()      Sets the current record's "JournalBookTemplate" value
 * @method JournalBookTemplateEntry setChartOfAccount()           Sets the current record's "ChartOfAccount" value
 * @method JournalBookTemplateEntry setGeneralLibrary()           Sets the current record's "GeneralLibrary" value
 * 
 * @package    Gcross Accounting System
 * @subpackage model
 * @author     Jerick Y. Duguran & Mary Ann I. Altar
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseJournalBookTemplateEntry extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('journal_book_template_entry');
        $this->hasColumn('journal_book_template_id', 'int', 11, array(
             'type' => 'int',
             'notnull' => true,
             'length' => 11,
             ));
        $this->hasColumn('chart_of_account_id', 'int', 11, array(
             'type' => 'int',
             'length' => 11,
             ));
        $this->hasColumn('general_library_id', 'int', 11, array(
             'type' => 'int',
             'length' => 11,
             ));
        $this->hasColumn('debit', 'decimal', 12, array(
             'type' => 'decimal',
             'scale' => 2,
             'default' => 0,
             'notnull' => true,
             'length' => 12,
             ));
        $this->hasColumn('credit', 'decimal', 12, array(
             'type' => 'decimal',
             'scale' => 2,
             'default' => 0,
             'notnull' => true,
             'length' => 12,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('JournalBookTemplate', array(
             'local' => 'journal_book_template_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('ChartOfAccount', array(
             'local' => 'chart_of_account_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('GeneralLibrary', array(
             'local' => 'general_library_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}