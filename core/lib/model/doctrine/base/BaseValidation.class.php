<?php

/**
 * BaseValidation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $code
 * @property string $name
 * @property string $description
 * @property boolean $status
 * @property Doctrine_Collection $ChartOfAccount
 * @property Doctrine_Collection $ChartOfAccountType
 * @property Doctrine_Collection $ChartOfAccountValidation
 * @property Doctrine_Collection $ChartOfAccountTypeValidation
 * 
 * @method string              getCode()                         Returns the current record's "code" value
 * @method string              getName()                         Returns the current record's "name" value
 * @method string              getDescription()                  Returns the current record's "description" value
 * @method boolean             getStatus()                       Returns the current record's "status" value
 * @method Doctrine_Collection getChartOfAccount()               Returns the current record's "ChartOfAccount" collection
 * @method Doctrine_Collection getChartOfAccountType()           Returns the current record's "ChartOfAccountType" collection
 * @method Doctrine_Collection getChartOfAccountValidation()     Returns the current record's "ChartOfAccountValidation" collection
 * @method Doctrine_Collection getChartOfAccountTypeValidation() Returns the current record's "ChartOfAccountTypeValidation" collection
 * @method Validation          setCode()                         Sets the current record's "code" value
 * @method Validation          setName()                         Sets the current record's "name" value
 * @method Validation          setDescription()                  Sets the current record's "description" value
 * @method Validation          setStatus()                       Sets the current record's "status" value
 * @method Validation          setChartOfAccount()               Sets the current record's "ChartOfAccount" collection
 * @method Validation          setChartOfAccountType()           Sets the current record's "ChartOfAccountType" collection
 * @method Validation          setChartOfAccountValidation()     Sets the current record's "ChartOfAccountValidation" collection
 * @method Validation          setChartOfAccountTypeValidation() Sets the current record's "ChartOfAccountTypeValidation" collection
 * 
 * @package    Gcross Accounting System
 * @subpackage model
 * @author     Jerick Y. Duguran & Mary Ann I. Altar
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseValidation extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('validation');
        $this->hasColumn('code', 'string', 60, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'unique' => true,
             'length' => 60,
             ));
        $this->hasColumn('name', 'string', 60, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 60,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('status', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 1,
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('ChartOfAccount', array(
             'refClass' => 'ChartOfAccountValidation',
             'local' => 'validation_id',
             'foreign' => 'chart_of_account_id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('ChartOfAccountType', array(
             'refClass' => 'ChartOfAccountTypeValidation',
             'local' => 'validation_id',
             'foreign' => 'chart_of_account_type_id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('ChartOfAccountValidation', array(
             'local' => 'id',
             'foreign' => 'validation_id'));

        $this->hasMany('ChartOfAccountTypeValidation', array(
             'local' => 'id',
             'foreign' => 'validation_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}