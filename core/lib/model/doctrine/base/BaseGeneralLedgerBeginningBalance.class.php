<?php

/**
 * BaseGeneralLedgerBeginningBalance
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $chart_of_account_id
 * @property integer $project_id
 * @property integer $department_id
 * @property decimal $debit
 * @property decimal $credit
 * @property ChartOfAccount $ChartOfAccount
 * @property Project $Project
 * @property Department $Department
 * 
 * @method integer                       getChartOfAccountId()    Returns the current record's "chart_of_account_id" value
 * @method integer                       getProjectId()           Returns the current record's "project_id" value
 * @method integer                       getDepartmentId()        Returns the current record's "department_id" value
 * @method decimal                       getDebit()               Returns the current record's "debit" value
 * @method decimal                       getCredit()              Returns the current record's "credit" value
 * @method ChartOfAccount                getChartOfAccount()      Returns the current record's "ChartOfAccount" value
 * @method Project                       getProject()             Returns the current record's "Project" value
 * @method Department                    getDepartment()          Returns the current record's "Department" value
 * @method GeneralLedgerBeginningBalance setChartOfAccountId()    Sets the current record's "chart_of_account_id" value
 * @method GeneralLedgerBeginningBalance setProjectId()           Sets the current record's "project_id" value
 * @method GeneralLedgerBeginningBalance setDepartmentId()        Sets the current record's "department_id" value
 * @method GeneralLedgerBeginningBalance setDebit()               Sets the current record's "debit" value
 * @method GeneralLedgerBeginningBalance setCredit()              Sets the current record's "credit" value
 * @method GeneralLedgerBeginningBalance setChartOfAccount()      Sets the current record's "ChartOfAccount" value
 * @method GeneralLedgerBeginningBalance setProject()             Sets the current record's "Project" value
 * @method GeneralLedgerBeginningBalance setDepartment()          Sets the current record's "Department" value
 * 
 * @package    Gcross Accounting System
 * @subpackage model
 * @author     Jerick Y. Duguran & Mary Ann I. Altar
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseGeneralLedgerBeginningBalance extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('general_ledger_beginning_balance');
        $this->hasColumn('chart_of_account_id', 'integer', 11, array(
             'type' => 'integer',
             'length' => 11,
             ));
        $this->hasColumn('project_id', 'integer', 11, array(
             'type' => 'integer',
             'length' => 11,
             ));
        $this->hasColumn('department_id', 'integer', 11, array(
             'type' => 'integer',
             'length' => 11,
             ));
        $this->hasColumn('debit', 'decimal', 12, array(
             'type' => 'decimal',
             'scale' => 2,
             'default' => 0,
             'notnull' => true,
             'length' => 12,
             ));
        $this->hasColumn('credit', 'decimal', 12, array(
             'type' => 'decimal',
             'scale' => 2,
             'default' => 0,
             'notnull' => true,
             'length' => 12,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ChartOfAccount', array(
             'local' => 'chart_of_account_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('Project', array(
             'local' => 'project_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('Department', array(
             'local' => 'department_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}