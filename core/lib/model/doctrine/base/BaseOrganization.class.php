<?php

/**
 * BaseOrganization
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $display_name
 * @property string $legal_name
 * @property int $organization_type_id
 * @property string $rdo_code
 * @property string $branch_code
 * @property string $tin
 * @property string $logo
 * @property string $street
 * @property string $city
 * @property int $code
 * @property int $country_id
 * @property string $telephone_number
 * @property string $fax
 * @property string $mobile_number
 * @property string $email
 * @property string $facebook_url
 * @property string $twitter_url
 * @property string $linkedln_url
 * @property string $googleplus_url
 * @property OrganizationType $OrganizationType
 * @property Country $Country
 * 
 * @method string           getDisplayName()          Returns the current record's "display_name" value
 * @method string           getLegalName()            Returns the current record's "legal_name" value
 * @method int              getOrganizationTypeId()   Returns the current record's "organization_type_id" value
 * @method string           getRdoCode()              Returns the current record's "rdo_code" value
 * @method string           getBranchCode()           Returns the current record's "branch_code" value
 * @method string           getTin()                  Returns the current record's "tin" value
 * @method string           getLogo()                 Returns the current record's "logo" value
 * @method string           getStreet()               Returns the current record's "street" value
 * @method string           getCity()                 Returns the current record's "city" value
 * @method int              getCode()                 Returns the current record's "code" value
 * @method int              getCountryId()            Returns the current record's "country_id" value
 * @method string           getTelephoneNumber()      Returns the current record's "telephone_number" value
 * @method string           getFax()                  Returns the current record's "fax" value
 * @method string           getMobileNumber()         Returns the current record's "mobile_number" value
 * @method string           getEmail()                Returns the current record's "email" value
 * @method string           getFacebookUrl()          Returns the current record's "facebook_url" value
 * @method string           getTwitterUrl()           Returns the current record's "twitter_url" value
 * @method string           getLinkedlnUrl()          Returns the current record's "linkedln_url" value
 * @method string           getGoogleplusUrl()        Returns the current record's "googleplus_url" value
 * @method OrganizationType getOrganizationType()     Returns the current record's "OrganizationType" value
 * @method Country          getCountry()              Returns the current record's "Country" value
 * @method Organization     setDisplayName()          Sets the current record's "display_name" value
 * @method Organization     setLegalName()            Sets the current record's "legal_name" value
 * @method Organization     setOrganizationTypeId()   Sets the current record's "organization_type_id" value
 * @method Organization     setRdoCode()              Sets the current record's "rdo_code" value
 * @method Organization     setBranchCode()           Sets the current record's "branch_code" value
 * @method Organization     setTin()                  Sets the current record's "tin" value
 * @method Organization     setLogo()                 Sets the current record's "logo" value
 * @method Organization     setStreet()               Sets the current record's "street" value
 * @method Organization     setCity()                 Sets the current record's "city" value
 * @method Organization     setCode()                 Sets the current record's "code" value
 * @method Organization     setCountryId()            Sets the current record's "country_id" value
 * @method Organization     setTelephoneNumber()      Sets the current record's "telephone_number" value
 * @method Organization     setFax()                  Sets the current record's "fax" value
 * @method Organization     setMobileNumber()         Sets the current record's "mobile_number" value
 * @method Organization     setEmail()                Sets the current record's "email" value
 * @method Organization     setFacebookUrl()          Sets the current record's "facebook_url" value
 * @method Organization     setTwitterUrl()           Sets the current record's "twitter_url" value
 * @method Organization     setLinkedlnUrl()          Sets the current record's "linkedln_url" value
 * @method Organization     setGoogleplusUrl()        Sets the current record's "googleplus_url" value
 * @method Organization     setOrganizationType()     Sets the current record's "OrganizationType" value
 * @method Organization     setCountry()              Sets the current record's "Country" value
 * 
 * @package    Gcross Accounting System
 * @subpackage model
 * @author     Jerick Y. Duguran & Mary Ann I. Altar
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseOrganization extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('organization');
        $this->hasColumn('display_name', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 50,
             ));
        $this->hasColumn('legal_name', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 100,
             ));
        $this->hasColumn('organization_type_id', 'int', 11, array(
             'type' => 'int',
             'length' => 11,
             ));
        $this->hasColumn('rdo_code', 'string', 10, array(
             'type' => 'string',
             'length' => 10,
             ));
        $this->hasColumn('branch_code', 'string', 10, array(
             'type' => 'string',
             'length' => 10,
             ));
        $this->hasColumn('tin', 'string', 12, array(
             'type' => 'string',
             'length' => 12,
             ));
        $this->hasColumn('logo', 'string', 150, array(
             'type' => 'string',
             'length' => 150,
             ));
        $this->hasColumn('street', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('city', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('code', 'int', 11, array(
             'type' => 'int',
             'length' => 11,
             ));
        $this->hasColumn('country_id', 'int', 11, array(
             'type' => 'int',
             'length' => 11,
             ));
        $this->hasColumn('telephone_number', 'string', 60, array(
             'type' => 'string',
             'length' => 60,
             ));
        $this->hasColumn('fax', 'string', 60, array(
             'type' => 'string',
             'length' => 60,
             ));
        $this->hasColumn('mobile_number', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('email', 'string', 60, array(
             'type' => 'string',
             'length' => 60,
             ));
        $this->hasColumn('facebook_url', 'string', 150, array(
             'type' => 'string',
             'length' => 150,
             ));
        $this->hasColumn('twitter_url', 'string', 150, array(
             'type' => 'string',
             'length' => 150,
             ));
        $this->hasColumn('linkedln_url', 'string', 150, array(
             'type' => 'string',
             'length' => 150,
             ));
        $this->hasColumn('googleplus_url', 'string', 150, array(
             'type' => 'string',
             'length' => 150,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('OrganizationType', array(
             'local' => 'organization_type_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('Country', array(
             'local' => 'country_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}